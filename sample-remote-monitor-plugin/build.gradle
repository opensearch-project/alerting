/*
 * Copyright OpenSearch Contributors
 * SPDX-License-Identifier: Apache-2.0
 */

apply plugin: 'opensearch.opensearchplugin'
apply plugin: 'opensearch.testclusters'
apply plugin: 'opensearch.java-rest-test'

import org.opensearch.gradle.test.RestIntegTestTask
import org.opensearch.gradle.testclusters.StandaloneRestIntegTestTask
import org.apache.tools.ant.taskdefs.condition.Os

import java.util.concurrent.Callable


opensearchplugin {
    name 'sample-remote-monitor-plugin'
    description 'Sample plugin that extends OpenSearch Alerting plugin'
    classname 'org.opensearch.alerting.SampleRemoteMonitorPlugin'
    extendedPlugins = ['opensearch-alerting']
}

ext {
    projectSubstitutions = [:]
    licenseFile = rootProject.file('LICENSE.txt')
    noticeFile = rootProject.file('NOTICE.txt')
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://aws.oss.sonatype.org/content/repositories/snapshots" }
}

configurations {
    zipArchive
}

dependencies {
    compileOnly project(path: ":alerting-spi", configuration: 'shadow')
    compileOnly "org.opensearch:common-utils:${common_utils_version}@jar"
    compileOnly "com.cronutils:cron-utils:9.1.7"
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}"
    compileOnly 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}"
}

def es_tmp_dir = rootProject.file('build/private/es_tmp').absoluteFile
es_tmp_dir.mkdirs()

File repo = file("$buildDir/testclusters/repo")
def _numNodes = findProperty('numNodes') as Integer ?: 1

licenseHeaders.enabled = true
validateNebulaPom.enabled = false
testingConventions.enabled = false
loggerUsageCheck.enabled = false

javaRestTest.dependsOn(rootProject.assemble)
javaRestTest {
    systemProperty 'tests.security.manager', 'false'
}
testClusters.javaRestTest {
    testDistribution = 'INTEG_TEST'
}
